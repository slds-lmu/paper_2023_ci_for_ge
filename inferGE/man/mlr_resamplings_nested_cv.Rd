% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ResamplingNestedCV.R
\name{mlr_resamplings_nested_cv}
\alias{mlr_resamplings_nested_cv}
\alias{ResamplingNestedCV}
\title{Nested Cross-Validation}
\description{
Nested cross-validation which allows for valid inference of the generalization error at considerably higher
computational cost.
}
\section{Parameters}{

\itemize{
\item \code{folds} :: (\code{integer(1)})\cr`
The number of folds.
\item \code{repeats} :: (\code{integer(1)})\cr`
The number of repetitions.
}
}

\section{Dictionary}{

This \link{Resampling} can be instantiated via the \link[mlr3misc:Dictionary]{dictionary} \link{mlr_resamplings} or with the associated sugar function \code{\link[=rsmp]{rsmp()}}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{mlr_resamplings$get("nested_cv")
rsmp("nested_cv")
}\if{html}{\out{</div>}}
}

\examples{
res = rsmp("nested_cv", folds = 2)
task = tsk("penguins")
res$instantiate(task)
res
}
\references{
Bates, Stephen, Hastie, Trevor, Tibshirani, Robert (2021).
\dQuote{Cross-validation: what does it estimate and how well does it do it?}
\doi{10.48550/ARXIV.2104.00673}, \url{https://arxiv.org/abs/2104.00673}.
}
\section{Super class}{
\code{\link[mlr3:Resampling]{mlr3::Resampling}} -> \code{ResamplingNestedCV}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{iters}}{(\code{integer(1)})\cr
The number of iterations.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ResamplingNestedCV-new}{\code{ResamplingNestedCV$new()}}
\item \href{#method-ResamplingNestedCV-unflatten}{\code{ResamplingNestedCV$unflatten()}}
\item \href{#method-ResamplingNestedCV-flatten}{\code{ResamplingNestedCV$flatten()}}
\item \href{#method-ResamplingNestedCV-clone}{\code{ResamplingNestedCV$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Resampling" data-id="format"><a href='../../mlr3/html/Resampling.html#method-Resampling-format'><code>mlr3::Resampling$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Resampling" data-id="help"><a href='../../mlr3/html/Resampling.html#method-Resampling-help'><code>mlr3::Resampling$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Resampling" data-id="instantiate"><a href='../../mlr3/html/Resampling.html#method-Resampling-instantiate'><code>mlr3::Resampling$instantiate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Resampling" data-id="print"><a href='../../mlr3/html/Resampling.html#method-Resampling-print'><code>mlr3::Resampling$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Resampling" data-id="test_set"><a href='../../mlr3/html/Resampling.html#method-Resampling-test_set'><code>mlr3::Resampling$test_set()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Resampling" data-id="train_set"><a href='../../mlr3/html/Resampling.html#method-Resampling-train_set'><code>mlr3::Resampling$train_set()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResamplingNestedCV-new"></a>}}
\if{latex}{\out{\hypertarget{method-ResamplingNestedCV-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResamplingNestedCV$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResamplingNestedCV-unflatten"></a>}}
\if{latex}{\out{\hypertarget{method-ResamplingNestedCV-unflatten}{}}}
\subsection{Method \code{unflatten()}}{
For a given iteration return info about the inner and outer loop.
In case the iteration belongs to the outer loop, the value \code{inner} is set to \code{NA_integer_}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResamplingNestedCV$unflatten(iter)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{iter}}{(\code{integer(1)})\cr
The iteration.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResamplingNestedCV-flatten"></a>}}
\if{latex}{\out{\hypertarget{method-ResamplingNestedCV-flatten}{}}}
\subsection{Method \code{flatten()}}{
Obtain the iteration for the specified \verb{(outer, inner)} tuple.
If \code{inner} is missing, the outer iteration is returned.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResamplingNestedCV$flatten(rep, outer, inner = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{rep}}{(\code{iterger(1)})\cr
The repetion.}

\item{\code{outer}}{(\code{integer(1)})\cr
The index of the outer iteration.}

\item{\code{inner}}{(\code{integer(1)})\cr
The index of the inner iteration.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResamplingNestedCV-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ResamplingNestedCV-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResamplingNestedCV$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
